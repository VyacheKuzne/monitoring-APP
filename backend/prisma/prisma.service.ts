// prisma.service.ts
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

const MAX_RETRIES = 10;
const RETRY_DELAY_MS = 2000;

async function connectWithRetry(attempt = 1): Promise<void> {
  try {
    await prisma.$connect();
    console.log('‚úÖ Prisma connected successfully');
  } catch (err) {
    console.error(`‚ùå Prisma connection failed (attempt ${attempt}):`, err.message);

    if (attempt >= MAX_RETRIES) {
      console.error('üíÄ Max retries reached. Exiting.');
      process.exit(1); // –∏–ª–∏ –±—Ä–æ—Å–∞–π –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –ø–∞–¥–∞—Ç—å
    }

    console.log(`üîÅ Retrying in ${RETRY_DELAY_MS / 1000}s...`);
    await new Promise((res) => setTimeout(res, RETRY_DELAY_MS));
    return connectWithRetry(attempt + 1);
  }
}

connectWithRetry(); // –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è —Å —Ä–µ—Ç—Ä–∞—è–º–∏

export default prisma;
